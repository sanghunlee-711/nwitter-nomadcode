{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/NweetFactory.js","components/Nweet.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","onChange","e","target","name","value","console","log","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","NweetFactory","userObj","nweet","setNeweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","attachmentUrl","nweetObj","text","createdAt","Date","now","creatorId","collection","add","maxLength","accept","theFile","files","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","alt","src","width","height","Nweet","isOwner","editing","setEditing","newNweet","setNewNweet","onDeleteClick","ok","window","confirm","doc","id","delete","refFromURL","toggleEditing","update","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArray","docs","map","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","exact","path","from","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71af57a4.chunk.js","sourcesContent":["//import * as firebase from 'firebase/app';\n//update로 인해 아래와 같이 기입 필요\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();\n//collection => folder\n// document -> files\n","import React,{useState} from 'react';\nimport {authService} from 'myBase';\n\n\nconst AuthForm = () =>{\n\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n\n    const onChange = (e)=>{\n        const {target: {name, value}} = e;\n        if(name ===\"email\"){\n            setEmail(value)\n            console.log(name, value)\n        }else if (name ===\"password\"){\n            setPassword(value)\n            console.log(name, value)\n        }\n    }\n    //https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithpopup\n    const onSubmit = async(e)=>{\n        e.preventDefault();\n        try{\n            let data;\n            //https://firebase.google.com/docs/reference/js/firebase.auth.Auth#setpersistence\n            if(newAccount){\n                //create Account\n                //https://firebase.google.com/docs/reference/js/firebase.auth.Auth#createuserwithemailandpassword\n                data = await authService.createUserWithEmailAndPassword(email, password);\n               console.log(data);\n            } else{\n                //log in\n                //https://firebase.google.com/docs/reference/js/firebase.auth.Auth#signinwithemailandpassword\n                data = await authService.signInWithEmailAndPassword(email, password);\n            }\n            console.log(data);\n        }catch(err){\n            console.log(err.message)\n        }\n    }\nconst toggleAccount = ()=> setNewAccount(prev => !prev);\n    return (\n        <>\n        <form onSubmit ={onSubmit}>\n        <input name = \"email\" type = \"text\" placeholder = \"Email\" required value = {email} onChange = {onChange}/>\n        <input name = \"password\" type = \"password\" placeholder = \"Password\" required value = {password} onChange = {onChange}/>\n        <input type = \"submit\" value = {newAccount ? \"Create Account\": \"Log In\"}/>\n    </form>\n    <span onClick={toggleAccount}>\n        {newAccount ? \"SignIng\": \"CreateAccount\"}\n    </span>\n    </>\n    )\n}\n\nexport default AuthForm","import React from 'react';\nimport {authService, firebaseInstance} from 'myBase';\nimport AuthForm from 'components/AuthForm'\nconst Auth =()=> { \n\n\n\nconst onSocialClick = async (e) => {\n    const {target:{name}} = e;\n    let provider;\n    if(name ===\"google\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n    }else if(name ===\"github\"){\n        provider = new firebaseInstance.auth.GithubAuthProvider();\n    }\n    await authService.signInWithPopup(provider)\n}\n\n    return (\n        <>\n        <AuthForm />\n    <div>\n        <div>\n            <button onClick ={onSocialClick} name = \"google\">Continue With Google</button>\n            <button onClick ={onSocialClick} name = \"github\">Continue With GitHub</button>\n        </div>\n    </div>\n    </>\n)}\n\nexport default Auth;","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { dbService, storageService } from 'myBase';\n\nconst NweetFactory = ({userObj}) =>{\n    const [nweet, setNeweet] = useState('');\n    const [attachment, setAttachment] = useState('');\n\n    const onSubmit = async e => {\n        //when submit create documents in firestore(DB)\n        e.preventDefault();\n    \n        //below logic has some problems..\n        //uuid for child reference\n        // let attachmentUrl = '';\n        // if (attachment !== '') {\n        //   const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n        //   const response = await attachmentRef.putString(attachment, 'data_url');\n        //   let attachmentUrl = await response.ref.getDownloadURL();\n        //   console.log('attachmentUrl', attachmentUrl);\n        // }\n    \n        // const nweetObj = {\n        //   text: nweet,\n        //   createdAt: Date.now(),\n        //   creatorId: userObj.uid,\n        //   attachmentUrl,\n        // };\n        // console.log('second attachmentUrl', attachmentUrl);\n        // await dbService.collection('nweets').add(nweetObj);\n        // setNeweet('');\n        // setAttachment('');\n    \n        if (attachment !== '') {\n          const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n          const response = await attachmentRef.putString(attachment, 'data_url');\n          let attachmentUrl = await response.ref.getDownloadURL();\n          console.log('attachmentUrl', attachmentUrl);\n    \n          const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n          };\n    \n          await dbService.collection('nweets').add(nweetObj);\n          setNeweet('');\n          setAttachment('');\n        } else if (attachment === '') {\n          const nweetObj = {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl: attachment,\n          };\n          await dbService.collection('nweets').add(nweetObj);\n          setNeweet('');\n          setAttachment('');\n        }\n      };\n    \n      const onChange = e => {\n        const {\n          target: { value },\n        } = e;\n        setNeweet(value);\n      };\n      // console.log(neweets)\n    \n      const onFileChange = e => {\n        const {\n          target: { files },\n        } = e;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.readAsDataURL(theFile);\n        reader.onloadend = finishedEvent => {\n          const {\n            currentTarget: { result },\n          } = finishedEvent;\n          console.log('finishedEvent', finishedEvent);\n          setAttachment(result);\n        };\n      };\n      const onClearAttachment = () => {\n        setAttachment('');\n      };\n    return (\n        <form onSubmit={onSubmit}>\n        <input\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n        <input type=\"submit\" value=\"Nweet\" />\n        {attachment && (\n          <div>\n            <img alt=\"attachement\" src={attachment} width=\"50px\" height=\"50px\" />\n            <button onClick={onClearAttachment}>Clear</button>\n          </div>\n        )}\n      </form>\n    )\n}\n\nexport default NweetFactory","import { dbService, storageService } from 'myBase';\nimport React, { useState } from 'react';\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false); //for class toggling\n  const [newNweet, setNewNweet] = useState(nweetObj.text); //for updating text\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm('wann dlelete?');\n    console.log(ok);\n    if (ok) {\n      //delete nweet\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\n      //delete Pic\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\n    }\n  };\n  const toggleEditing = () => setEditing(prev => !prev);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\n      text: newNweet,\n    });\n    setEditing(false);\n    console.log('newNweet', newNweet);\n  };\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setNewNweet(value);\n  };\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input\n              type=\"text\"\n              placeholder=\"Edit yours\"\n              value={newNweet}\n              onChange={onChange}\n              required\n            />\n            <input type=\"submit\" value=\"Update Neweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          {' '}\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img alt=\"Hello\" src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n          )}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState, useEffect } from 'react';\nimport { dbService } from 'myBase';\nimport NweetFactory from 'components/NweetFactory';\nimport Nweet from 'components/Nweet';\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n  // const getNweets = async()=>{\n  //     console.log(userObj)\n  //     const dbNweets = await dbService.collection(\"nweets\").get();\n  //     dbNweets.forEach(document => {\n  //         const nweetObject ={\n  //             ...document.data(),\n  //             id: document.id,\n  //             creatorId: userObj.uid,\n  //         }\n  //         setNweets(prev => [nweetObject, ...prev])\n  //     })\n  //     console.log(dbNweets);\n  // }\n  useEffect(() => {\n    // getNweets();\n    //collection을 정하는 것은 중요함.\n    //snap shot for realtime db check and show\n    dbService\n      .collection('nweets')\n      .orderBy('createdAt', 'desc')\n      .onSnapshot(snapshot => {\n        const nweetArray = snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));\n        setNweets(nweetArray);\n        console.log(nweetArray);\n      });\n  }, []);\n\n  \n\n  return (\n    <div>\n      <NweetFactory userObj={ userObj }/>\n\n      <div>\n        {nweets?.map(nweet => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">HOME</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}'s Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { authService, dbService } from 'myBase';\nimport React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push('/');\n  };\n\n  const getMyNweets = async () => {\n    const nweets = await dbService\n      .collection('nweets')\n      .where('creatorId', '==', userObj.uid)\n      .orderBy('createdAt', 'desc')\n      .get();\n    console.log(nweets.docs.map(doc => doc.data));\n  };\n\n  const onChange = e => {\n    const {\n      target: { value },\n    } = e;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const {\n      target: { value },\n    } = e;\n    if (userObj.displayName !== newDisplayName) {\n      await userObj.updateProfile({ displayName: newDisplayName });\n    }\n    refreshUser();\n  };\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" placeholder=\"DisplayName\" onChange={onChange} value={newDisplayName} />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\nexport default Profile;\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport Auth from '../routes/Auth';\nimport Home from '../routes/Home';\nimport Navigation from 'components/Navigation';\nimport Profile from 'routes/Profile';\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n            <Redirect from=\"*\" to=\"/\" />\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useEffect, useState } from 'react';\nimport AppRouter from 'components/Router';\nimport { authService } from 'myBase';\n\n//https://firebase.google.com/docs/reference/js/firebase.auth.EmailAuthProvider\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  //https://firebase.google.com/docs/reference/js/firebase.auth.Auth#onauthstatechanged\n  useEffect(() => {\n    //keep track state of auth\n    authService.onAuthStateChanged(user => {\n      if (user) {\n        //1\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: args => user.updateProfile(args),\n        });\n        //2\n        // setUserObj(user);\n      }else{\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    console.log(authService.currentUser.displayName);\n    //아래와 같이 하면 객체 크기가 너무 크니까 리액트가 판단하기까지 시간이 오래걸려서 렌더결정이 되지 않는문제가 발생함.\n    // setUserObj(authService.currentUser);\n\n    //1\n    //이렇게 하면 더 작은 특정요소들을 가져와서 넣기 때문에 판단이 빨라지므로 렌더 시 변경되는 것이 그대로 나타난다.(virtual dom성능을 생각해야하나보다)\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: args => user.updateProfile(args),\n    });\n\n    //2 객체 전체를 바꿔버리니까 바뀌었다고 판단하고 렌더를 곧바로 리렌더 시켜버림(에러많으므로 자제)\n    // setUserObj(Object.assign({}, user));\n  };\n  //Boolean(userObj) -> check userObj state so that delete isLoggedIn State\n  return (\n    <div>\n      {init ? (\n        <AppRouter refreshUser={refreshUser} userObj={userObj} isLoggedIn={Boolean(userObj)} />\n      ) : (\n        'Initializing....'\n      )}\n      {/* <footer>\n        &copy; By Sanghun with Nomad Code {new Date().getFullYear()}\n      </footer> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}